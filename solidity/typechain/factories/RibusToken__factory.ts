/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RibusToken, RibusTokenInterface } from "../RibusToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "wallets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "percentages",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526311e1a3006006553480156200001957600080fd5b50604051620029a2380380620029a283398181016040528101906200003f9190620003ec565b6040518060400160405280600b81526020017f526962757320546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f52425300000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000c392919062000325565b508060049080519060200190620000dc92919062000325565b505050620000ff620000f36200011760201b60201c565b6200011f60201b60201c565b6200011081620001e560201b60201c565b50620005e6565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001f56200011760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200021b620002fb60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000274576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026b9062000488565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620002e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002de9062000466565b60405180910390fd5b620002f8816200011f60201b60201c565b50565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8280546200033390620004ef565b90600052602060002090601f016020900481019282620003575760008555620003a3565b82601f106200037257805160ff1916838001178555620003a3565b82800160010185558215620003a3579182015b82811115620003a257825182559160200191906001019062000385565b5b509050620003b29190620003b6565b5090565b5b80821115620003d1576000816000905550600101620003b7565b5090565b600081519050620003e681620005cc565b92915050565b600060208284031215620003ff57600080fd5b60006200040f84828501620003d5565b91505092915050565b600062000427602683620004aa565b9150620004348262000554565b604082019050919050565b60006200044e602083620004aa565b91506200045b82620005a3565b602082019050919050565b60006020820190508181036000830152620004818162000418565b9050919050565b60006020820190508181036000830152620004a3816200043f565b9050919050565b600082825260208201905092915050565b6000620004c882620004cf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200050857607f821691505b602082108114156200051f576200051e62000525565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b620005d781620004bb565b8114620005e357600080fd5b50565b6123ac80620005f66000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461029f578063a9059cbb146102cf578063dd62ed3e146102ff578063f2fde38b1461032f57610100565b806370a0823114610229578063715018a6146102595780638da5cb5b1461026357806395d89b411461028157610100565b806323b872dd116100d357806323b872dd1461018f578063313ce567146101bf578063371aa158146101dd57806339509351146101f957610100565b8063047fc9aa1461010557806306fdde0314610123578063095ea7b31461014157806318160ddd14610171575b600080fd5b61010d61034b565b60405161011a9190611c03565b60405180910390f35b61012b610351565b6040516101389190611a21565b60405180910390f35b61015b600480360381019061015691906116e4565b6103e3565b6040516101689190611a06565b60405180910390f35b610179610406565b6040516101869190611c03565b60405180910390f35b6101a960048036038101906101a49190611695565b610410565b6040516101b69190611a06565b60405180910390f35b6101c761043f565b6040516101d49190611c1e565b60405180910390f35b6101f760048036038101906101f29190611720565b610448565b005b610213600480360381019061020e91906116e4565b610679565b6040516102209190611a06565b60405180910390f35b610243600480360381019061023e9190611630565b610723565b6040516102509190611c03565b60405180910390f35b61026161076b565b005b61026b6107f3565b60405161027891906119eb565b60405180910390f35b61028961081d565b6040516102969190611a21565b60405180910390f35b6102b960048036038101906102b491906116e4565b6108af565b6040516102c69190611a06565b60405180910390f35b6102e960048036038101906102e491906116e4565b610999565b6040516102f69190611a06565b60405180910390f35b61031960048036038101906103149190611659565b6109bc565b6040516103269190611c03565b60405180910390f35b61034960048036038101906103449190611630565b610a43565b005b60065481565b60606003805461036090611e3b565b80601f016020809104026020016040519081016040528092919081815260200182805461038c90611e3b565b80156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b5050505050905090565b6000806103ee610b3b565b90506103fb818585610b43565b600191505092915050565b6000600254905090565b60008061041b610b3b565b9050610428858285610d0e565b610433858585610d9a565b60019150509392505050565b60006012905090565b600560159054906101000a900460ff1661047257600560149054906101000a900460ff161561047b565b61047a61101b565b5b6104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b190611b03565b60405180910390fd5b6000600560159054906101000a900460ff16159050801561050c576001600560156101000a81548160ff0219169083151502179055506001600560146101000a81548160ff0219169083151502179055505b610514610b3b565b73ffffffffffffffffffffffffffffffffffffffff166105326107f3565b73ffffffffffffffffffffffffffffffffffffffff1614610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057f90611b23565b60405180910390fd5b6000805b83518110156105f6578381815181106105ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151826105e19190611cd2565b915080806105ee90611e9e565b91505061058c565b50825184511480156106085750606481145b610647576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063e90611b43565b60405180910390fd5b610651848461102c565b508015610674576000600560156101000a81548160ff0219169083151502179055505b505050565b600080610684610b3b565b9050610718818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107139190611cd2565b610b43565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610773610b3b565b73ffffffffffffffffffffffffffffffffffffffff166107916107f3565b73ffffffffffffffffffffffffffffffffffffffff16146107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de90611b23565b60405180910390fd5b6107f1600061125b565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461082c90611e3b565b80601f016020809104026020016040519081016040528092919081815260200182805461085890611e3b565b80156108a55780601f1061087a576101008083540402835291602001916108a5565b820191906000526020600020905b81548152906001019060200180831161088857829003601f168201915b5050505050905090565b6000806108ba610b3b565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790611bc3565b60405180910390fd5b61098d8286868403610b43565b60019250505092915050565b6000806109a4610b3b565b90506109b1818585610d9a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4b610b3b565b73ffffffffffffffffffffffffffffffffffffffff16610a696107f3565b73ffffffffffffffffffffffffffffffffffffffff1614610abf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab690611b23565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2690611a63565b60405180910390fd5b610b388161125b565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baa90611b83565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a90611a83565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610d019190611c03565b60405180910390a3505050565b6000610d1a84846109bc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d945781811015610d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7d90611aa3565b60405180910390fd5b610d938484848403610b43565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0190611b63565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7190611a43565b60405180910390fd5b610e85838383611321565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0290611ac3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f9e9190611cd2565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110029190611c03565b60405180910390a3611015848484611326565b50505050565b60006110263061132b565b15905090565b611034610b3b565b73ffffffffffffffffffffffffffffffffffffffff166110526107f3565b73ffffffffffffffffffffffffffffffffffffffff16146110a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109f90611b23565b60405180910390fd5b600560159054906101000a900460ff166110f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ee90611ba3565b60405180910390fd5b60005b825181101561125657600083828151811061113e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000838381518110611183577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156111cb575060008114155b61120a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120190611ae3565b60405180910390fd5b600061123460646112268460065461134e90919063ffffffff16565b61136490919063ffffffff16565b9050611240838261137a565b505050808061124e90611e9e565b9150506110fa565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000818361135c9190611d59565b905092915050565b600081836113729190611d28565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e190611be3565b60405180910390fd5b6113f660008383611321565b80600260008282546114089190611cd2565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461145d9190611cd2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114c29190611c03565b60405180910390a36114d660008383611326565b5050565b60006114ed6114e884611c5e565b611c39565b9050808382526020820190508285602086028201111561150c57600080fd5b60005b8581101561153c578161152288826115b2565b84526020840193506020830192505060018101905061150f565b5050509392505050565b600061155961155484611c8a565b611c39565b9050808382526020820190508285602086028201111561157857600080fd5b60005b858110156115a8578161158e888261161b565b84526020840193506020830192505060018101905061157b565b5050509392505050565b6000813590506115c181612348565b92915050565b600082601f8301126115d857600080fd5b81356115e88482602086016114da565b91505092915050565b600082601f83011261160257600080fd5b8135611612848260208601611546565b91505092915050565b60008135905061162a8161235f565b92915050565b60006020828403121561164257600080fd5b6000611650848285016115b2565b91505092915050565b6000806040838503121561166c57600080fd5b600061167a858286016115b2565b925050602061168b858286016115b2565b9150509250929050565b6000806000606084860312156116aa57600080fd5b60006116b8868287016115b2565b93505060206116c9868287016115b2565b92505060406116da8682870161161b565b9150509250925092565b600080604083850312156116f757600080fd5b6000611705858286016115b2565b92505060206117168582860161161b565b9150509250929050565b6000806040838503121561173357600080fd5b600083013567ffffffffffffffff81111561174d57600080fd5b611759858286016115c7565b925050602083013567ffffffffffffffff81111561177657600080fd5b611782858286016115f1565b9150509250929050565b61179581611db3565b82525050565b6117a481611dc5565b82525050565b60006117b582611cb6565b6117bf8185611cc1565b93506117cf818560208601611e08565b6117d881611fa3565b840191505092915050565b60006117f0602383611cc1565b91506117fb82611fb4565b604082019050919050565b6000611813602683611cc1565b915061181e82612003565b604082019050919050565b6000611836602283611cc1565b915061184182612052565b604082019050919050565b6000611859601d83611cc1565b9150611864826120a1565b602082019050919050565b600061187c602683611cc1565b9150611887826120ca565b604082019050919050565b600061189f601283611cc1565b91506118aa82612119565b602082019050919050565b60006118c2602e83611cc1565b91506118cd82612142565b604082019050919050565b60006118e5602083611cc1565b91506118f082612191565b602082019050919050565b6000611908600d83611cc1565b9150611913826121ba565b602082019050919050565b600061192b602583611cc1565b9150611936826121e3565b604082019050919050565b600061194e602483611cc1565b915061195982612232565b604082019050919050565b6000611971602b83611cc1565b915061197c82612281565b604082019050919050565b6000611994602583611cc1565b915061199f826122d0565b604082019050919050565b60006119b7601f83611cc1565b91506119c28261231f565b602082019050919050565b6119d681611df1565b82525050565b6119e581611dfb565b82525050565b6000602082019050611a00600083018461178c565b92915050565b6000602082019050611a1b600083018461179b565b92915050565b60006020820190508181036000830152611a3b81846117aa565b905092915050565b60006020820190508181036000830152611a5c816117e3565b9050919050565b60006020820190508181036000830152611a7c81611806565b9050919050565b60006020820190508181036000830152611a9c81611829565b9050919050565b60006020820190508181036000830152611abc8161184c565b9050919050565b60006020820190508181036000830152611adc8161186f565b9050919050565b60006020820190508181036000830152611afc81611892565b9050919050565b60006020820190508181036000830152611b1c816118b5565b9050919050565b60006020820190508181036000830152611b3c816118d8565b9050919050565b60006020820190508181036000830152611b5c816118fb565b9050919050565b60006020820190508181036000830152611b7c8161191e565b9050919050565b60006020820190508181036000830152611b9c81611941565b9050919050565b60006020820190508181036000830152611bbc81611964565b9050919050565b60006020820190508181036000830152611bdc81611987565b9050919050565b60006020820190508181036000830152611bfc816119aa565b9050919050565b6000602082019050611c1860008301846119cd565b92915050565b6000602082019050611c3360008301846119dc565b92915050565b6000611c43611c54565b9050611c4f8282611e6d565b919050565b6000604051905090565b600067ffffffffffffffff821115611c7957611c78611f74565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611ca557611ca4611f74565b5b602082029050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611cdd82611df1565b9150611ce883611df1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d1d57611d1c611ee7565b5b828201905092915050565b6000611d3382611df1565b9150611d3e83611df1565b925082611d4e57611d4d611f16565b5b828204905092915050565b6000611d6482611df1565b9150611d6f83611df1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611da857611da7611ee7565b5b828202905092915050565b6000611dbe82611dd1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611e26578082015181840152602081019050611e0b565b83811115611e35576000848401525b50505050565b60006002820490506001821680611e5357607f821691505b60208210811415611e6757611e66611f45565b5b50919050565b611e7682611fa3565b810181811067ffffffffffffffff82111715611e9557611e94611f74565b5b80604052505050565b6000611ea982611df1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611edc57611edb611ee7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c6964206974656d20696e7075740000000000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c696420696e70757400000000000000000000000000000000000000600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61235181611db3565b811461235c57600080fd5b50565b61236881611df1565b811461237357600080fd5b5056fea26469706673582212205768e316b617a8ebc012191539941df3f4f025f0933184080ba03424e75c6b7364736f6c63430008040033";

export class RibusToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RibusToken> {
    return super.deploy(owner, overrides || {}) as Promise<RibusToken>;
  }
  getDeployTransaction(
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  attach(address: string): RibusToken {
    return super.attach(address) as RibusToken;
  }
  connect(signer: Signer): RibusToken__factory {
    return super.connect(signer) as RibusToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RibusTokenInterface {
    return new utils.Interface(_abi) as RibusTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RibusToken {
    return new Contract(address, _abi, signerOrProvider) as RibusToken;
  }
}
